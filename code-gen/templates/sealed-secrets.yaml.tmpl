# This shows how to create an example sealed secret. Sealed secrets are encrypted, so they are safe to check into a
# source repo. They are encrypted by the private key of the Bitnami sealed secret controller running in the cluster.
#
# For more information on sealed secrets, refer to:
# https://github.com/bitnami-labs/sealed-secrets
#
# To create a sealed secret, install the kubeseal tool using the instructions in the above URL. Then, create the
# sealed secret object for a regular secret object as shown below.
#
# The ping application stack has the following unencrypted secrets (namespace: ping-cloud):
#
#   Secrets for app licenses:
#
#       devops-secret - the user/secret required to run all Ping apps images (this or a license file must be provided)
#       pingdirectory-license - the PD app's license file
#       pingfederate-license - the PF app's license file
#
#   Secrets for SSH access (for example, it may be used to clone the server profile repository over SSH):
#
#       ssh-id-key-secret - The SSH private key of each Ping app
#
#   Secrets for passwords:
#
#       pingdirectory-passwords - the PD app's root/admin user passwords
#
# To seal these secrets, run the following commands:
#
#   Fetch the public key from the sealed-secret service running in the cluster:
#       kubeseal --fetch-cert --controller-namespace kube-system > cert.pem
#
#   For each of the above secrets, run the following command (shown for devop-secret):
#       kubectl get secret devops-secret -n ping-cloud -o yaml | kubeseal --cert cert.pem -o yaml
#
# Add the generated manifest file to this file, separating each sealed secret with the "---" delimiter. The seal.sh
# script shows how to automate this process (requires yq and jq to be installed). The regular secret objects may then
# be deleted via a patch to the kustomization.yaml file. For example:
#
# patchesStrategicMerge:
# - |-
#   apiVersion: v1
#   kind: Secret
#   metadata:
#     name: devops-secret
#     namespace: ping-cloud
#   $patch: delete
#
# When the change is pushed up, flux will automatically deploy the sealed secrets and their corresponding secret
# objects into the Kubernetes cluster.
#
# An example sealed secret object is shown below. It may be deleted after creating sealed secrets for the above
# secrets.


### DO NOT DELETE - If no sealed secrets are present, kustomize build will fail ###
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: example-sealed-secret
  namespace: ${PING_CLOUD_NAMESPACE}
spec:
  encryptedData:
    foo: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEq

---